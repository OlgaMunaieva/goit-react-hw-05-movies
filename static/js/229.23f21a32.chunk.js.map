{"version":3,"file":"static/js/229.23f21a32.chunk.js","mappings":"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","sources":["components/loader/Loader.components.js","components/loader/Loader.jsx","components/moviesList/MoviesList.styled.js","components/moviesList/MoviesList.jsx","components/text/Text.components.js","pages/home/Home.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 10px auto 20px;\n  width: 160px;\n  height: 60px;\n  position: relative;\n  /* left: 50%; */\n  /* top: 50%; */\n  /* transform: translate(-50%, -50%); */\n`;\n\nexport const LoaderCircle = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  border-radius: 50%;\n  background-color: #3f51b5;\n  left: 15%;\n  transform-origin: 50%;\n  animation: circle 300ms alternate infinite ease;\n\n  @keyframes circle {\n    0% {\n      top: 60%;\n      height: 5px;\n      border-radius: 50px 50px 25px 25px;\n    }\n    40% {\n      height: 20px;\n      border-radius: 50%;\n      transform: scaleX(1);\n    }\n    100% {\n      top: 0%;\n    }\n  }\n  :nth-child(2) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(3) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n\nexport const LoaderShadow = styled.div`\n  width: 20px;\n  height: 4px;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 220, 0.5);\n  position: absolute;\n  top: 62px;\n  transform-origin: 50%;\n  z-index: -1;\n  left: 15%;\n  filter: blur(1px);\n  animation: shadow 300ms alternate infinite ease;\n  @keyframes shadow {\n    0% {\n      transform: scaleX(1.5);\n    }\n    40% {\n      transform: scaleX(1);\n      opacity: 0.7;\n    }\n    100% {\n      transform: scaleX(0.2);\n      opacity: 0.4;\n    }\n  }\n  :nth-child(4) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(5) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n","import {\n  LoaderContainer,\n  LoaderCircle,\n  LoaderShadow,\n} from './Loader.components';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  line-height: 1.5;\n  /* list-style-type: none; */\n  & a {\n    text-decoration-line: none;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { MovieItem } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </MovieItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Text = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;\n","import Loader from 'components/loader/Loader';\nimport { Text } from 'components/text/Text.components';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrendMovies } from 'services/fetchAPI';\nimport MoviesList from 'components/moviesList/MoviesList';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function uploadTrends() {\n      setIsLoading(true);\n      try {\n        const trends = await fetchTrendMovies();\n\n        if (!trends.total_results) {\n          throw new Error('No data');\n        } else {\n          setTrendMovies(trends.results);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadTrends();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {isLoading && <Loader />}\n      {error && <Text>{error} There are not movies</Text>}\n      <MoviesList movies={trendMovies} location={location} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '3c96097624a2fa9e4b8164ba6b94edc9';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n//!-----------------------------------------------------------------\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchMovie(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchReview(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchCast(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","LoaderCircle","LoaderShadow","MovieItem","movies","location","map","id","title","Link","state","from","to","Text","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","error","setError","useLocation","useEffect","fetchTrendMovies","trends","total_results","Error","results","message","uploadTrends","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","axios","response","statusText","data","fetchSearch","searchQuery","fetchMovie","movie_id","fetchReview","fetchCast"],"sourceRoot":""}