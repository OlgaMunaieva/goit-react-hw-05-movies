{"version":3,"file":"static/js/398.907f3c30.chunk.js","mappings":"mMAEaA,EAAkBC,EAAAA,GAAAA,IAAH,8LAUfC,EAAeD,EAAAA,GAAAA,IAAH,8nBAoCZE,EAAeF,EAAAA,GAAAA,IAAH,opB,SC7BzB,EAbe,WACb,OACE,UAACD,EAAD,YACE,SAACE,EAAD,KACA,SAACA,EAAD,KACA,SAACA,EAAD,KACA,SAACC,EAAD,KACA,SAACA,EAAD,KACA,SAACA,EAAD,MAGL,C,sECfYC,E,QAAOH,GAAAA,IAAH,mE,0KCCXI,EAAW,QAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,uFACyBC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,EADkB,iCACeC,EAAAA,EADf,qBACmCL,EADnC,kBACqDE,EADrD,gCADzB,YACQI,EADR,QAIeC,WAJf,sBAKU,IAAIC,MAAMF,EAASC,YAL7B,gCAOSD,EAASG,MAPlB,kEAUA,MAZA,SAE2B,GAAZR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCAf,EAA+CS,EAAQ,MAA/CC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,YAgF/B,EA9Ee,WAAO,IAAD,EACbC,EAAWD,IACjB,EAAwCD,IAAxC,eAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAA0CC,EAAAA,EAAAA,UAASF,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KARmB,wCAenB,WAA4BV,GAA5B,gFACEQ,GAAa,GADf,kBAGuBxB,EAAYgB,GAHnC,UAGUR,EAHV,OAIUa,EAASb,EAAKmB,QACfnB,EAAKoB,cALd,uBAMY,IAAIrB,MAAM,WANtB,QAQMe,EAAUD,GARhB,0DAWIK,EAAS,KAAMG,SAXnB,yBAaIL,GAAa,GAbjB,6EAfmB,yBAUnBM,EAAAA,EAAAA,YAAU,WACHd,GAXY,oCAYjBe,CAAaf,EACd,GAAE,CAACA,IAkCJ,OACE,gCACGS,IAAS,UAAC,IAAD,WAAOA,EAAP,4BACV,kBAAMO,SAda,SAAAC,GACrBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,OAAOC,SAASC,OAAOC,MAC3CJ,EAIHpB,EAAgB,CAAEC,MAAOmB,KAHzBpB,EAAgB,CAAC,GACjBO,EAAU,IAIb,EAKG,WACE,kBACEkB,SApBa,SAAC,GAA2B,IAAfD,EAAc,EAAxBH,OAAUG,MAChCnB,EAAiBmB,EAClB,EAmBOE,KAAK,SACLF,MAAOpB,EACPuB,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAAb,UACE,SAAC,MAAD,SAGHnB,IAAa,SAACuB,EAAA,EAAD,KACd,wBACGzB,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACvC,EAAD,CAAMwC,MAAO,CAAEC,KAAMtC,GAAYuC,GAAE,UAAKJ,GAAxC,SACGC,KAFID,EADC,QAUnB,C,8ECnFM,IAAM5C,EAAU,mCACVD,EAAW,8B","sources":["components/loader/Loader.components.js","components/loader/Loader.jsx","components/text/Text.components.js","services/fetchSearch.js","pages/movies/Movies.jsx","services/settings.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 10px auto 20px;\n  width: 160px;\n  height: 60px;\n  position: relative;\n  /* left: 50%; */\n  /* top: 50%; */\n  /* transform: translate(-50%, -50%); */\n`;\n\nexport const LoaderCircle = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  border-radius: 50%;\n  background-color: #3f51b5;\n  left: 15%;\n  transform-origin: 50%;\n  animation: circle 300ms alternate infinite ease;\n\n  @keyframes circle {\n    0% {\n      top: 60%;\n      height: 5px;\n      border-radius: 50px 50px 25px 25px;\n    }\n    40% {\n      height: 20px;\n      border-radius: 50%;\n      transform: scaleX(1);\n    }\n    100% {\n      top: 0%;\n    }\n  }\n  :nth-child(2) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(3) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n\nexport const LoaderShadow = styled.div`\n  width: 20px;\n  height: 4px;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 220, 0.5);\n  position: absolute;\n  top: 62px;\n  transform-origin: 50%;\n  z-index: -1;\n  left: 15%;\n  filter: blur(1px);\n  animation: shadow 300ms alternate infinite ease;\n  @keyframes shadow {\n    0% {\n      transform: scaleX(1.5);\n    }\n    40% {\n      transform: scaleX(1);\n      opacity: 0.7;\n    }\n    100% {\n      transform: scaleX(0.2);\n      opacity: 0.4;\n    }\n  }\n  :nth-child(4) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(5) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n","import {\n  LoaderContainer,\n  LoaderCircle,\n  LoaderShadow,\n} from './Loader.components';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Text = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;\n","import axios from 'axios';\nimport { API_KEY, API_PATH } from './settings';\n\nconst LANGUAGE = 'en-US';\n\nasync function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport default fetchSearch;\n","import Loader from 'components/loader/Loader';\nimport { Text } from 'components/text/Text.components';\nimport { useEffect, useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport fetchSearch from 'services/fetchSearch';\nconst { Link, useSearchParams, useLocation } = require('react-router-dom');\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [queryOnChange, setQueryOnChange] = useState(query);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!query) return;\n    uploadMovies(query);\n  }, [query]);\n\n  async function uploadMovies(query) {\n    setIsLoading(true);\n    try {\n      const data = await fetchSearch(query);\n      const movies = data.results;\n      if (!data.total_results) {\n        throw new Error('No data');\n      } else {\n        setMovies(movies);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const handleChange = ({ target: { value } }) => {\n    setQueryOnChange(value);\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const inputValue = event.target.elements.search.value;\n    if (!inputValue) {\n      setSearchParams({});\n      setMovies([]);\n    } else {\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n  return (\n    <>\n      {error && <Text>{error} There are not movies</Text>}\n      <form onSubmit={handleOnSubmit}>\n        <input\n          onChange={handleChange}\n          name=\"search\"\n          value={queryOnChange}\n          type=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">\n          <FiSearch />\n        </button>\n      </form>\n      {isLoading && <Loader />}\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link state={{ from: location }} to={`${id}`}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = '3c96097624a2fa9e4b8164ba6b94edc9';\nexport const API_PATH = 'https://api.themoviedb.org/3';\n"],"names":["LoaderContainer","styled","LoaderCircle","LoaderShadow","Text","LANGUAGE","fetchSearch","searchQuery","axios","API_PATH","API_KEY","response","statusText","Error","data","require","Link","useSearchParams","useLocation","location","searchParams","setSearchParams","query","get","useState","queryOnChange","setQueryOnChange","movies","setMovies","isLoading","setIsLoading","error","setError","results","total_results","message","useEffect","uploadMovies","onSubmit","event","preventDefault","inputValue","target","elements","search","value","onChange","name","type","autoComplete","autoFocus","placeholder","Loader","map","id","title","state","from","to"],"sourceRoot":""}