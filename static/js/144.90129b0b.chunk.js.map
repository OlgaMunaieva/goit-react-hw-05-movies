{"version":3,"file":"static/js/144.90129b0b.chunk.js","mappings":"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","sources":["components/error/Error.components.js","components/loader/Loader.components.js","components/loader/Loader.jsx","pages/movieDetails/MovieDetails.styled.js","pages/movieDetails/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 10px auto 20px;\n  width: 160px;\n  height: 60px;\n  position: relative;\n  /* left: 50%; */\n  /* top: 50%; */\n  /* transform: translate(-50%, -50%); */\n`;\n\nexport const LoaderCircle = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  border-radius: 50%;\n  background-color: #3f51b5;\n  left: 15%;\n  transform-origin: 50%;\n  animation: circle 300ms alternate infinite ease;\n\n  @keyframes circle {\n    0% {\n      top: 60%;\n      height: 5px;\n      border-radius: 50px 50px 25px 25px;\n    }\n    40% {\n      height: 20px;\n      border-radius: 50%;\n      transform: scaleX(1);\n    }\n    100% {\n      top: 0%;\n    }\n  }\n  :nth-child(2) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(3) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n\nexport const LoaderShadow = styled.div`\n  width: 20px;\n  height: 4px;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 220, 0.5);\n  position: absolute;\n  top: 62px;\n  transform-origin: 50%;\n  z-index: -1;\n  left: 15%;\n  filter: blur(1px);\n  animation: shadow 300ms alternate infinite ease;\n  @keyframes shadow {\n    0% {\n      transform: scaleX(1.5);\n    }\n    40% {\n      transform: scaleX(1);\n      opacity: 0.7;\n    }\n    100% {\n      transform: scaleX(0.2);\n      opacity: 0.4;\n    }\n  }\n  :nth-child(4) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(5) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n","import {\n  LoaderContainer,\n  LoaderCircle,\n  LoaderShadow,\n} from './Loader.components';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  margin-bottom: 5px;\n  border: 1px solid black;\n  border-radius: 5px;\n  text-decoration-line: none;\n  padding: 3px;\n`;\n\nexport const MovieInformation = styled.div`\n  @media screen and (min-width: 980px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n\nexport const MovieInformationText = styled.div`\n  @media screen and (min-width: 980px) {\n    width: calc(100% - 300px - 20px);\n  }\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MovieMoreInformation = styled.div`\n  margin: 0 -20px;\n  padding: 5px 20px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 9px 9px -6px,\n    rgb(0 0 0 / 14%) 0px 9px 12px 0px, rgb(0 0 0 / 12%) 0px 3px 24px 0px;\n`;\n","import Loader from 'components/loader/Loader';\nimport { Text } from 'components/error/Error.components';\nimport { Suspense, useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/fetchAPI';\nimport {\n  GenresList,\n  LinkButton,\n  MovieImg,\n  MovieInformation,\n  MovieInformationText,\n  MovieMoreInformation,\n} from './MovieDetails.styled';\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { GiTargetPoster } from 'react-icons/gi';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? `/movies`);\n\n  useEffect(() => {\n    async function uploadMovie(movieId) {\n      setIsLoading(true);\n      try {\n        const movie = await fetchMovie(movieId);\n        if (!movie) {\n          throw new Error('No data');\n        } else {\n          setMovie(movie);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadMovie(movieId);\n  }, [movieId]);\n\n  const {\n    original_title,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  const year = new Date(release_date).getFullYear();\n  const userScore = Math.round(vote_average * 10);\n\n  return (\n    <>\n      <LinkButton to={backLinkLocation.current}>\n        <TiArrowBackOutline />\n        Go back\n      </LinkButton>\n      {isLoading && <Loader />}\n      {error && <Text>{error} There are not movies</Text>}\n      <MovieInformation>\n        {poster_path ? (\n          <MovieImg\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={original_title}\n            width=\"300\"\n          />\n        ) : (\n          <GiTargetPoster\n            style={{ display: 'block', width: '300px' }}\n            color=\"rgb(60 80 60 )\"\n            size={500}\n          />\n        )}\n        <MovieInformationText>\n          <h1>\n            {original_title} ({year})\n          </h1>\n          <p>User score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres && genres.map(({ name, id }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </MovieInformationText>\n      </MovieInformation>\n      <MovieMoreInformation>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"review\">Review</Link>\n          </li>\n        </ul>\n      </MovieMoreInformation>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '3c96097624a2fa9e4b8164ba6b94edc9';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n//!-----------------------------------------------------------------\n/**\n * trending movie information query function\n * @returns Object with trending movies information or error status\n */\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\n/**\n * the function of requesting information on films by the search word\n * @param {*string} searchQuery\n * @returns Object with information about the requested movies or error status\n */\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchMovie(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchReview(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchCast(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n"],"names":["Text","styled","LoaderContainer","LoaderCircle","LoaderShadow","LinkButton","Link","MovieInformation","MovieImg","MovieInformationText","GenresList","MovieMoreInformation","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovie","Error","message","uploadMovie","original_title","release_date","poster_path","vote_average","overview","genres","year","Date","getFullYear","userScore","Math","round","to","current","Loader","src","alt","width","style","display","color","size","map","name","id","Suspense","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","fetchTrendMovies","axios","response","statusText","data","fetchSearch","searchQuery","movie_id","fetchReview","fetchCast"],"sourceRoot":""}