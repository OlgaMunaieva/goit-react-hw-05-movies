{"version":3,"file":"static/js/639.0f5dd9b9.chunk.js","mappings":"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","sources":["components/error/Error.components.js","components/loader/Loader.components.js","components/loader/Loader.jsx","components/moviesList/MoviesList.styled.js","components/moviesList/MoviesList.jsx","components/searchForm/SearchForm.styled.js","components/searchForm/SearchFormSubmit.jsx","pages/movies/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 10px auto 20px;\n  width: 160px;\n  height: 60px;\n  position: relative;\n  /* left: 50%; */\n  /* top: 50%; */\n  /* transform: translate(-50%, -50%); */\n`;\n\nexport const LoaderCircle = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  border-radius: 50%;\n  background-color: #3f51b5;\n  left: 15%;\n  transform-origin: 50%;\n  animation: circle 300ms alternate infinite ease;\n\n  @keyframes circle {\n    0% {\n      top: 60%;\n      height: 5px;\n      border-radius: 50px 50px 25px 25px;\n    }\n    40% {\n      height: 20px;\n      border-radius: 50%;\n      transform: scaleX(1);\n    }\n    100% {\n      top: 0%;\n    }\n  }\n  :nth-child(2) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(3) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n\nexport const LoaderShadow = styled.div`\n  width: 20px;\n  height: 4px;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 220, 0.5);\n  position: absolute;\n  top: 62px;\n  transform-origin: 50%;\n  z-index: -1;\n  left: 15%;\n  filter: blur(1px);\n  animation: shadow 300ms alternate infinite ease;\n  @keyframes shadow {\n    0% {\n      transform: scaleX(1.5);\n    }\n    40% {\n      transform: scaleX(1);\n      opacity: 0.7;\n    }\n    100% {\n      transform: scaleX(0.2);\n      opacity: 0.4;\n    }\n  }\n  :nth-child(4) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(5) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n","import {\n  LoaderContainer,\n  LoaderCircle,\n  LoaderShadow,\n} from './Loader.components';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  line-height: 1.5;\n  /* list-style-type: none; */\n  & a {\n    text-decoration-line: none;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieItem } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </MovieItem>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  width: 300px;\n`;\n\nexport const SearchInput = styled.input`\n  font-size: 26px;\n  width: calc(100% - 120px);\n`;\n\nexport const SubmitButton = styled.button`\n  font-size: 24px;\n  width: 120px;\n`;\n","import { FiSearch } from 'react-icons/fi';\nimport { SearchForm, SearchInput, SubmitButton } from './SearchForm.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchFormSubmit = ({ onSubmit, query }) => {\n  const [queryOnChange, setQueryOnChange] = useState(query);\n\n  // useEffect(() => {\n  //   setQueryOnChange(JSON.parse(localStorage.getItem('queryMovies')) ?? '');\n  // }, []);\n\n  const handleChange = ({ target: { value } }) => {\n    setQueryOnChange(value);\n    // localStorage.setItem('queryMovies', JSON.stringify(value));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const inputValue = event.target.elements.search.value;\n    onSubmit(inputValue);\n  };\n\n  return (\n    <SearchForm onSubmit={handleOnSubmit}>\n      <SearchInput\n        onChange={handleChange}\n        name=\"search\"\n        value={queryOnChange}\n        type=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <SubmitButton type=\"submit\">\n        Search\n        <FiSearch />\n      </SubmitButton>\n    </SearchForm>\n  );\n};\n\nSearchFormSubmit.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default SearchFormSubmit;\n","import Loader from 'components/loader/Loader';\nimport { Text } from 'components/error/Error.components';\nimport { useEffect, useState } from 'react';\nimport { fetchSearch } from 'services/fetchAPI';\nimport MoviesList from 'components/moviesList/MoviesList';\nimport SearchFormSubmit from 'components/searchForm/SearchFormSubmit';\nconst { useSearchParams } = require('react-router-dom');\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!query) return;\n    async function uploadMovies(query) {\n      setIsLoading(true);\n      try {\n        const data = await fetchSearch(query);\n        const movies = data.results;\n        if (!data.total_results) {\n          throw new Error('No data');\n        } else {\n          setMovies(movies);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadMovies(query);\n  }, [query]);\n\n  const onSubmit = inputValue => {\n    if (!inputValue) {\n      setSearchParams({});\n      setMovies([]);\n    } else {\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n  return (\n    <>\n      {error && <Text>{error} There are not movies</Text>}\n      <SearchFormSubmit onSubmit={onSubmit} query={query} />\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '3c96097624a2fa9e4b8164ba6b94edc9';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n//!-----------------------------------------------------------------\n/**\n * trending movie information query function\n * @returns Object with trending movies information or error status\n */\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\n/**\n * the function of requesting information on films by the search word\n * @param {*string} searchQuery\n * @returns Object with information about the requested movies or error status\n */\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchMovie(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchReview(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchCast(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n"],"names":["Text","styled","LoaderContainer","LoaderCircle","LoaderShadow","MovieItem","movies","location","useLocation","map","id","title","Link","state","from","to","SearchForm","SearchInput","SubmitButton","onSubmit","query","useState","queryOnChange","setQueryOnChange","event","preventDefault","inputValue","target","elements","search","value","onChange","name","type","autoComplete","autoFocus","placeholder","useSearchParams","require","searchParams","setSearchParams","get","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchSearch","data","results","total_results","Error","message","uploadMovies","Loader","MoviesList","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","fetchTrendMovies","axios","response","statusText","searchQuery","fetchMovie","movie_id","fetchReview","fetchCast"],"sourceRoot":""}