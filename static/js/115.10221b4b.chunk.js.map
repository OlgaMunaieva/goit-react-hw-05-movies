{"version":3,"file":"static/js/115.10221b4b.chunk.js","mappings":"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","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","components/error/Error.components.js","components/loader/Loader.components.js","components/loader/Loader.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n  justify-content: space-around;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  color: rgb(60 80 60);\n`;\n","import Loader from 'components/loader/Loader';\nimport { Text } from 'components/error/Error.components';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/fetchAPI';\nimport { CastItem, CastList } from './Cast.styled';\nimport { FaPortrait } from 'react-icons/fa';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function uploadCast(movieId) {\n      setIsLoading(true);\n      try {\n        const { cast } = await fetchCast(movieId);\n        if (!cast.length) {\n          throw new Error('No data');\n        } else {\n          setCast(cast);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <Text>{error} There are not movies</Text>}\n      <CastList>\n        {cast.map(({ id, name, character, profile_path }) => {\n          return (\n            <CastItem key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                  alt={name}\n                />\n              ) : (\n                <FaPortrait\n                  style={{ display: 'block', width: '100%' }}\n                  color=\"rgb(60 80 60 )\"\n                  size={300}\n                />\n              )}\n              <p>{name}</p>\n              <p>{character}</p>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Text = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 10px auto 20px;\n  width: 160px;\n  height: 60px;\n  position: relative;\n  /* left: 50%; */\n  /* top: 50%; */\n  /* transform: translate(-50%, -50%); */\n`;\n\nexport const LoaderCircle = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  border-radius: 50%;\n  background-color: #3f51b5;\n  left: 15%;\n  transform-origin: 50%;\n  animation: circle 300ms alternate infinite ease;\n\n  @keyframes circle {\n    0% {\n      top: 60%;\n      height: 5px;\n      border-radius: 50px 50px 25px 25px;\n    }\n    40% {\n      height: 20px;\n      border-radius: 50%;\n      transform: scaleX(1);\n    }\n    100% {\n      top: 0%;\n    }\n  }\n  :nth-child(2) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(3) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n\nexport const LoaderShadow = styled.div`\n  width: 20px;\n  height: 4px;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 220, 0.5);\n  position: absolute;\n  top: 62px;\n  transform-origin: 50%;\n  z-index: -1;\n  left: 15%;\n  filter: blur(1px);\n  animation: shadow 300ms alternate infinite ease;\n  @keyframes shadow {\n    0% {\n      transform: scaleX(1.5);\n    }\n    40% {\n      transform: scaleX(1);\n      opacity: 0.7;\n    }\n    100% {\n      transform: scaleX(0.2);\n      opacity: 0.4;\n    }\n  }\n  :nth-child(4) {\n    left: 45%;\n    animation-delay: 100ms;\n  }\n  :nth-child(5) {\n    left: auto;\n    right: 15%;\n    animation-delay: 200ms;\n  }\n`;\n","import {\n  LoaderContainer,\n  LoaderCircle,\n  LoaderShadow,\n} from './Loader.components';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderCircle></LoaderCircle>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n      <LoaderShadow></LoaderShadow>\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '3c96097624a2fa9e4b8164ba6b94edc9';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n//!-----------------------------------------------------------------\n/**\n * trending movie information query function\n * @returns Object with trending movies information or error status\n */\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\n/**\n * the function of requesting information on films by the search word\n * @param {*string} searchQuery\n * @returns Object with information about the requested movies or error status\n */\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchMovie(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchReview(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n//!-----------------------------------------------------------------\nexport async function fetchCast(movie_id) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movie_id}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n"],"names":["CastList","styled","CastItem","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchCast","length","Error","message","uploadCast","Loader","map","id","name","character","profile_path","src","alt","style","display","width","color","size","Text","LoaderContainer","LoaderCircle","LoaderShadow","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","fetchTrendMovies","axios","response","statusText","data","fetchSearch","searchQuery","fetchMovie","movie_id","fetchReview"],"sourceRoot":""}